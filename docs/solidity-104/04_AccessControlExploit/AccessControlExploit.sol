// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

// 权限管理错误例子
contract AccessControlExploit is ERC20, Ownable {
  // 构造函数：初始化代币名称和代号
  constructor() ERC20("Wrong Access", "WA") {}

  // 错误的mint函数，没有限制权限
  function badMint(address to, uint amount) public {
    _mint(to, amount);
  }

  // 正确的mint函数，使用 onlyOwner 修饰器限制权限
  function goodMint(address to, uint amount) public onlyOwner {
    _mint(to, amount);
  }

  // 错误的burn函数，没有限制权限
  function badBurn(address account, uint amount) public {
    _burn(account, amount);
  }

  // 正确的burn函数，如果销毁的不是自己的代币，则会检查授权
  function goodBurn(address account, uint amount) public {
    if (msg.sender != account) {
      _spendAllowance(account, msg.sender, amount);
    }
    _burn(account, amount);
  }
}
